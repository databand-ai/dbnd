[tox]
envlist = py27,py36,py37,manifest
toxworkdir = {toxinidir}/../../.tox/dbnd-aws

[dbnd]
home = {toxinidir}/../..
tests_emr = tests/test_emr_spark_task.py
tests = tests
modules = {[dbnd]home}/modules
plugins-core = {[dbnd]home}/plugins

[testenv]
# Python 3.6+ has a number of compile-time warnings on invalid string escapes.
# PYTHONWARNINGS=d and --no-compile below make them visible during the Tox run.
install_command = pip install --no-compile {opts} {packages}

# Prevent random setuptools/pip breakages like
# https://github.com/pypa/setuptools/issues/1042 from breaking our builds.
setenv =
	VIRTUALENV_NO_DOWNLOAD = 1
	DBND_HOME = {[dbnd]home}/..

    AIRFLOW_CONN_SPARK_EMR=spark://local
    AIRFLOW_CONN_AWS_DEFAULT=spark://local

	AIRFLOW_TEST_DB = {[tox]toxworkdir}/airflow-{envname}-unittests.db
	AIRFLOW__CORE__SQL_ALCHEMY_CONN = sqlite:///{env:AIRFLOW_TEST_DB}

passenv = AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN AWS_SECURITY_TOKEN DBND__AWS_TESTS__CLUSTER
deps =
    pandas<1.0.0,>=0.17.1
    marshmallow<2.20,>=2.18.0
	-e {[dbnd]modules}/dbnd
    -e {[dbnd]modules}/dbnd[tests]
    -e {[dbnd]plugins-core}/dbnd-test-scenarios
	-e {[dbnd]modules}/dbnd-airflow
	-e {[dbnd]modules}/dbnd-airflow[airflow]
	-e {[dbnd]modules}/dbnd-airflow[tests]
	-e {[dbnd]home}/plugins/dbnd-spark
	-e {[dbnd]home}/plugins/dbnd-spark[tests]
    -e {[dbnd]home}/plugins/dbnd-docker

whitelist_externals = rm

filterwarnings =
	once::Warning: Django>=1.5,<1.6
	ignore::ResourceWarning

commands =
	rm -f {env:AIRFLOW_TEST_DB}
	# we don't need databand db, only airflow
	airflow initdb

	coverage erase
	pytest --cov dbnd_aws --run-aws  --junit-xml build/junit-{envname}.xml {[dbnd]tests} {posargs}
	coverage report

[testenv:py36-emr]
basepython = python3.6
commands =
    rm -f {env:AIRFLOW_TEST_DB}
	coverage erase
	# we don't need databand db, only airflow
	airflow initdb
	pytest --cov dbnd_aws --run-aws --run-emr --junit-xml build/junit-{envname}.xml {[dbnd]tests_emr} {posargs}
	coverage report

[testenv:manifest]
basepython = python3.6
deps = check-manifest
skip_install = true
commands = check-manifest
